<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.edzleft.dao.trade.contractSigning.ContractSigningMapper" >
  <resultMap id="BaseResultMap" type="cn.com.edzleft.entity.Contract" >
    <id column="contract_id" property="contractId" jdbcType="INTEGER" />
    <result column="contract_number" property="contractNumber" jdbcType="VARCHAR" />
    <result column="contract_name" property="contractName" jdbcType="VARCHAR" />
    <result column="contract_buyer" property="contractBuyer" jdbcType="VARCHAR" />
    <result column="contract_trader" property="contractTrader" jdbcType="VARCHAR" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="signing_address" property="signingAddress" jdbcType="VARCHAR" />
    <result column="signing_time" property="signingTime" jdbcType="TIMESTAMP" />
    <result column="trade_signatories" property="tradeSignatories" jdbcType="VARCHAR" />
    <result column="buyer_signatory" property="buyerSignatory" jdbcType="VARCHAR" />
    <result column="assist_contract_id" property="assistContractId" jdbcType="INTEGER" />
    <result column="order_contract_id" property="orderContractId" jdbcType="INTEGER" />
    <result column="contract_status" property="contractStatus" jdbcType="INTEGER" />
    <result column="contract_letter_person" property="contractLetterPerson" jdbcType="VARCHAR" />
    <result column="contract_credit" property="contractCredit" jdbcType="DOUBLE" />
    <result column="contract_letter" property="contractLetter" jdbcType="DOUBLE" />
    <result column="contract_create_time" property="contractCreateTime" jdbcType="TIMESTAMP" />
    <result column="contract_founder" property="contractFounder" jdbcType="VARCHAR" />
    <result column="contract_electronics_id" property="contractElectronicsId" jdbcType="INTEGER" />
    <result column="contract_scanner" property="contractScanner" jdbcType="INTEGER" />
    <result column="letter_apply" property="letterApply" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    contract_id, contract_number, contract_name, contract_buyer, contract_trader, creat_time, 
    end_time, signing_address, signing_time, trade_signatories, buyer_signatory, assist_contract_id, 
    order_contract_id, contract_status, contract_letter_person, contract_credit, contract_letter, 
    contract_create_time, contract_founder, contract_electronics_id, contract_scanner, 
    letter_apply
  </sql>

  <!--条件查询-->
  <sql id="where_sql">
    <trim prefix="where" prefixOverrides="and">
      <if test="whereMap != null &amp;&amp; whereMap.contractStatus != null and whereMap.contractStatus != ''">
        AND contract_status  LIKE '%${whereMap.contractStatus}%'
      </if>
      <if test="whereMap != null &amp;&amp; whereMap.creatTime != null and whereMap.creatTime != ''">
        AND creat_time  LIKE '%${whereMap.creatTime}%'
      </if>
      <if test="whereMap != null &amp;&amp; whereMap.endTime != null and whereMap.endTime != ''">
        AND end_time  LIKE '%${whereMap.endTime}%'
      </if>
      <if test="whereMap != null &amp;&amp; whereMap.buyerSignatory != null and whereMap.buyerSignatory != ''">
        AND buyer_signatory  LIKE '%${whereMap.buyerSignatory}%'
      </if>
    </trim>
  </sql>

  <!--查询总条数-->
  <select id="selectTotalCount"  resultType="Integer" parameterType="cn.com.edzleft.util.page.PageUtil">
    select count(*) from gyl_contract <include refid="where_sql"/>
  </select>

  <!--分页查询-->
  <select id="selectContractByPage"  resultMap="BaseResultMap" parameterType="cn.com.edzleft.util.page.PageUtil">
    select
    <include refid="Base_Column_List" />
    from gyl_contract
    <include refid="where_sql"/>
    ORDER BY contract_create_time  DESC
    <![CDATA[	limit #{start},#{pageSize}]]>
  </select>

  <!--根据id查询合同详细信息-->
  <select id="selectContractById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from gyl_contract
    where contract_id = #{contractId,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from gyl_contract
    where contract_id = #{contractId,jdbcType=INTEGER}
  </delete>



  <insert id="insert" parameterType="cn.com.edzleft.entity.Contract" >
    insert into gyl_contract (contract_id, contract_number, contract_name, 
      contract_buyer, contract_trader, creat_time, 
      end_time, signing_address, signing_time, 
      trade_signatories, buyer_signatory, assist_contract_id, 
      order_contract_id, contract_status, contract_letter_person, 
      contract_credit, contract_letter, contract_create_time, 
      contract_founder, contract_electronics_id, 
      contract_scanner, letter_apply)
    values (#{contractId,jdbcType=INTEGER}, #{contractNumber,jdbcType=VARCHAR}, #{contractName,jdbcType=VARCHAR}, 
      #{contractBuyer,jdbcType=VARCHAR}, #{contractTrader,jdbcType=VARCHAR}, #{creatTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{signingAddress,jdbcType=VARCHAR}, #{signingTime,jdbcType=TIMESTAMP}, 
      #{tradeSignatories,jdbcType=VARCHAR}, #{buyerSignatory,jdbcType=VARCHAR}, #{assistContractId,jdbcType=INTEGER}, 
      #{orderContractId,jdbcType=INTEGER}, #{contractStatus,jdbcType=INTEGER}, #{contractLetterPerson,jdbcType=VARCHAR}, 
      #{contractCredit,jdbcType=DOUBLE}, #{contractLetter,jdbcType=DOUBLE}, #{contractCreateTime,jdbcType=TIMESTAMP}, 
      #{contractFounder,jdbcType=VARCHAR}, #{contractElectronicsId,jdbcType=INTEGER}, 
      #{contractScanner,jdbcType=INTEGER}, #{letterApply,jdbcType=INTEGER})
  </insert>


  <insert id="insertSelective" parameterType="cn.com.edzleft.entity.Contract" >
    insert into gyl_contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contractId != null" >
        contract_id,
      </if>
      <if test="contractNumber != null" >
        contract_number,
      </if>
      <if test="contractName != null" >
        contract_name,
      </if>
      <if test="contractBuyer != null" >
        contract_buyer,
      </if>
      <if test="contractTrader != null" >
        contract_trader,
      </if>
      <if test="creatTime != null" >
        creat_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="signingAddress != null" >
        signing_address,
      </if>
      <if test="signingTime != null" >
        signing_time,
      </if>
      <if test="tradeSignatories != null" >
        trade_signatories,
      </if>
      <if test="buyerSignatory != null" >
        buyer_signatory,
      </if>
      <if test="assistContractId != null" >
        assist_contract_id,
      </if>
      <if test="orderContractId != null" >
        order_contract_id,
      </if>
      <if test="contractStatus != null" >
        contract_status,
      </if>
      <if test="contractLetterPerson != null" >
        contract_letter_person,
      </if>
      <if test="contractCredit != null" >
        contract_credit,
      </if>
      <if test="contractLetter != null" >
        contract_letter,
      </if>
      <if test="contractCreateTime != null" >
        contract_create_time,
      </if>
      <if test="contractFounder != null" >
        contract_founder,
      </if>
      <if test="contractElectronicsId != null" >
        contract_electronics_id,
      </if>
      <if test="contractScanner != null" >
        contract_scanner,
      </if>
      <if test="letterApply != null" >
        letter_apply,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contractId != null" >
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="contractNumber != null" >
        #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null" >
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractBuyer != null" >
        #{contractBuyer,jdbcType=VARCHAR},
      </if>
      <if test="contractTrader != null" >
        #{contractTrader,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null" >
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signingAddress != null" >
        #{signingAddress,jdbcType=VARCHAR},
      </if>
      <if test="signingTime != null" >
        #{signingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeSignatories != null" >
        #{tradeSignatories,jdbcType=VARCHAR},
      </if>
      <if test="buyerSignatory != null" >
        #{buyerSignatory,jdbcType=VARCHAR},
      </if>
      <if test="assistContractId != null" >
        #{assistContractId,jdbcType=INTEGER},
      </if>
      <if test="orderContractId != null" >
        #{orderContractId,jdbcType=INTEGER},
      </if>
      <if test="contractStatus != null" >
        #{contractStatus,jdbcType=INTEGER},
      </if>
      <if test="contractLetterPerson != null" >
        #{contractLetterPerson,jdbcType=VARCHAR},
      </if>
      <if test="contractCredit != null" >
        #{contractCredit,jdbcType=DOUBLE},
      </if>
      <if test="contractLetter != null" >
        #{contractLetter,jdbcType=DOUBLE},
      </if>
      <if test="contractCreateTime != null" >
        #{contractCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contractFounder != null" >
        #{contractFounder,jdbcType=VARCHAR},
      </if>
      <if test="contractElectronicsId != null" >
        #{contractElectronicsId,jdbcType=INTEGER},
      </if>
      <if test="contractScanner != null" >
        #{contractScanner,jdbcType=INTEGER},
      </if>
      <if test="letterApply != null" >
        #{letterApply,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="cn.com.edzleft.entity.Contract" >
    update gyl_contract
    <set >
      <if test="contractNumber != null" >
        contract_number = #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null" >
        contract_name = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractBuyer != null" >
        contract_buyer = #{contractBuyer,jdbcType=VARCHAR},
      </if>
      <if test="contractTrader != null" >
        contract_trader = #{contractTrader,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signingAddress != null" >
        signing_address = #{signingAddress,jdbcType=VARCHAR},
      </if>
      <if test="signingTime != null" >
        signing_time = #{signingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeSignatories != null" >
        trade_signatories = #{tradeSignatories,jdbcType=VARCHAR},
      </if>
      <if test="buyerSignatory != null" >
        buyer_signatory = #{buyerSignatory,jdbcType=VARCHAR},
      </if>
      <if test="assistContractId != null" >
        assist_contract_id = #{assistContractId,jdbcType=INTEGER},
      </if>
      <if test="orderContractId != null" >
        order_contract_id = #{orderContractId,jdbcType=INTEGER},
      </if>
      <if test="contractStatus != null" >
        contract_status = #{contractStatus,jdbcType=INTEGER},
      </if>
      <if test="contractLetterPerson != null" >
        contract_letter_person = #{contractLetterPerson,jdbcType=VARCHAR},
      </if>
      <if test="contractCredit != null" >
        contract_credit = #{contractCredit,jdbcType=DOUBLE},
      </if>
      <if test="contractLetter != null" >
        contract_letter = #{contractLetter,jdbcType=DOUBLE},
      </if>
      <if test="contractCreateTime != null" >
        contract_create_time = #{contractCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contractFounder != null" >
        contract_founder = #{contractFounder,jdbcType=VARCHAR},
      </if>
      <if test="contractElectronicsId != null" >
        contract_electronics_id = #{contractElectronicsId,jdbcType=INTEGER},
      </if>
      <if test="contractScanner != null" >
        contract_scanner = #{contractScanner,jdbcType=INTEGER},
      </if>
      <if test="letterApply != null" >
        letter_apply = #{letterApply,jdbcType=INTEGER},
      </if>
    </set>
    where contract_id = #{contractId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.edzleft.entity.Contract" >
    update gyl_contract
    set contract_number = #{contractNumber,jdbcType=VARCHAR},
      contract_name = #{contractName,jdbcType=VARCHAR},
      contract_buyer = #{contractBuyer,jdbcType=VARCHAR},
      contract_trader = #{contractTrader,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      signing_address = #{signingAddress,jdbcType=VARCHAR},
      signing_time = #{signingTime,jdbcType=TIMESTAMP},
      trade_signatories = #{tradeSignatories,jdbcType=VARCHAR},
      buyer_signatory = #{buyerSignatory,jdbcType=VARCHAR},
      assist_contract_id = #{assistContractId,jdbcType=INTEGER},
      order_contract_id = #{orderContractId,jdbcType=INTEGER},
      contract_status = #{contractStatus,jdbcType=INTEGER},
      contract_letter_person = #{contractLetterPerson,jdbcType=VARCHAR},
      contract_credit = #{contractCredit,jdbcType=DOUBLE},
      contract_letter = #{contractLetter,jdbcType=DOUBLE},
      contract_create_time = #{contractCreateTime,jdbcType=TIMESTAMP},
      contract_founder = #{contractFounder,jdbcType=VARCHAR},
      contract_electronics_id = #{contractElectronicsId,jdbcType=INTEGER},
      contract_scanner = #{contractScanner,jdbcType=INTEGER},
      letter_apply = #{letterApply,jdbcType=INTEGER}
    where contract_id = #{contractId,jdbcType=INTEGER}
  </update>
</mapper>